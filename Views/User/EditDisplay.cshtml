@model RecipeTracker.Models.User

<h2>Custom Edit User Display</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">
        <h2>User Information</h2>
        <div>
            @Html.HiddenFor(model=> model.UserID)
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4", style = "margin-top:20px" })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4", style="margin-top:20px"  })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4", style="margin-top:20px" })
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group" style="margin-top:20px">
            <input type="submit" value="Save Changes" class="btn btn-success" style="box-shadow:2px 2px 2px black;" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")    
}
